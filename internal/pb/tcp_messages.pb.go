// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        v5.26.1
// source: tcp_messages.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TCPCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Command       string                 `protobuf:"bytes,1,opt,name=command,proto3" json:"command,omitempty"`
	Payload       []byte                 `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TCPCommand) Reset() {
	*x = TCPCommand{}
	mi := &file_tcp_messages_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TCPCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TCPCommand) ProtoMessage() {}

func (x *TCPCommand) ProtoReflect() protoreflect.Message {
	mi := &file_tcp_messages_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TCPCommand.ProtoReflect.Descriptor instead.
func (*TCPCommand) Descriptor() ([]byte, []int) {
	return file_tcp_messages_proto_rawDescGZIP(), []int{0}
}

func (x *TCPCommand) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *TCPCommand) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

type CommandClientLogin struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommandClientLogin) Reset() {
	*x = CommandClientLogin{}
	mi := &file_tcp_messages_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommandClientLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandClientLogin) ProtoMessage() {}

func (x *CommandClientLogin) ProtoReflect() protoreflect.Message {
	mi := &file_tcp_messages_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandClientLogin.ProtoReflect.Descriptor instead.
func (*CommandClientLogin) Descriptor() ([]byte, []int) {
	return file_tcp_messages_proto_rawDescGZIP(), []int{1}
}

func (x *CommandClientLogin) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *CommandClientLogin) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type CommandClientRegister struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommandClientRegister) Reset() {
	*x = CommandClientRegister{}
	mi := &file_tcp_messages_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommandClientRegister) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandClientRegister) ProtoMessage() {}

func (x *CommandClientRegister) ProtoReflect() protoreflect.Message {
	mi := &file_tcp_messages_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandClientRegister.ProtoReflect.Descriptor instead.
func (*CommandClientRegister) Descriptor() ([]byte, []int) {
	return file_tcp_messages_proto_rawDescGZIP(), []int{2}
}

func (x *CommandClientRegister) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *CommandClientRegister) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type CommandServerLoginSuccess struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommandServerLoginSuccess) Reset() {
	*x = CommandServerLoginSuccess{}
	mi := &file_tcp_messages_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommandServerLoginSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandServerLoginSuccess) ProtoMessage() {}

func (x *CommandServerLoginSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_tcp_messages_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandServerLoginSuccess.ProtoReflect.Descriptor instead.
func (*CommandServerLoginSuccess) Descriptor() ([]byte, []int) {
	return file_tcp_messages_proto_rawDescGZIP(), []int{3}
}

func (x *CommandServerLoginSuccess) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type CommandServerLoginFailed struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommandServerLoginFailed) Reset() {
	*x = CommandServerLoginFailed{}
	mi := &file_tcp_messages_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommandServerLoginFailed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandServerLoginFailed) ProtoMessage() {}

func (x *CommandServerLoginFailed) ProtoReflect() protoreflect.Message {
	mi := &file_tcp_messages_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandServerLoginFailed.ProtoReflect.Descriptor instead.
func (*CommandServerLoginFailed) Descriptor() ([]byte, []int) {
	return file_tcp_messages_proto_rawDescGZIP(), []int{4}
}

func (x *CommandServerLoginFailed) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type CommandServerRegisterSuccess struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommandServerRegisterSuccess) Reset() {
	*x = CommandServerRegisterSuccess{}
	mi := &file_tcp_messages_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommandServerRegisterSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandServerRegisterSuccess) ProtoMessage() {}

func (x *CommandServerRegisterSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_tcp_messages_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandServerRegisterSuccess.ProtoReflect.Descriptor instead.
func (*CommandServerRegisterSuccess) Descriptor() ([]byte, []int) {
	return file_tcp_messages_proto_rawDescGZIP(), []int{5}
}

func (x *CommandServerRegisterSuccess) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type CommandServerRegisterFailed struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommandServerRegisterFailed) Reset() {
	*x = CommandServerRegisterFailed{}
	mi := &file_tcp_messages_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommandServerRegisterFailed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandServerRegisterFailed) ProtoMessage() {}

func (x *CommandServerRegisterFailed) ProtoReflect() protoreflect.Message {
	mi := &file_tcp_messages_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandServerRegisterFailed.ProtoReflect.Descriptor instead.
func (*CommandServerRegisterFailed) Descriptor() ([]byte, []int) {
	return file_tcp_messages_proto_rawDescGZIP(), []int{6}
}

func (x *CommandServerRegisterFailed) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

var File_tcp_messages_proto protoreflect.FileDescriptor

var file_tcp_messages_proto_rawDesc = string([]byte{
	0x0a, 0x12, 0x74, 0x63, 0x70, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x40, 0x0a, 0x0a, 0x54,
	0x43, 0x50, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x4c, 0x0a,
	0x12, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x4f, 0x0a, 0x15, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x37, 0x0a, 0x19,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x36, 0x0a, 0x18, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x65,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3a, 0x0a,
	0x1c, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x39, 0x0a, 0x1b, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0d, 0x5a, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_tcp_messages_proto_rawDescOnce sync.Once
	file_tcp_messages_proto_rawDescData []byte
)

func file_tcp_messages_proto_rawDescGZIP() []byte {
	file_tcp_messages_proto_rawDescOnce.Do(func() {
		file_tcp_messages_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_tcp_messages_proto_rawDesc), len(file_tcp_messages_proto_rawDesc)))
	})
	return file_tcp_messages_proto_rawDescData
}

var file_tcp_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_tcp_messages_proto_goTypes = []any{
	(*TCPCommand)(nil),                   // 0: proto.TCPCommand
	(*CommandClientLogin)(nil),           // 1: proto.CommandClientLogin
	(*CommandClientRegister)(nil),        // 2: proto.CommandClientRegister
	(*CommandServerLoginSuccess)(nil),    // 3: proto.CommandServerLoginSuccess
	(*CommandServerLoginFailed)(nil),     // 4: proto.CommandServerLoginFailed
	(*CommandServerRegisterSuccess)(nil), // 5: proto.CommandServerRegisterSuccess
	(*CommandServerRegisterFailed)(nil),  // 6: proto.CommandServerRegisterFailed
}
var file_tcp_messages_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_tcp_messages_proto_init() }
func file_tcp_messages_proto_init() {
	if File_tcp_messages_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_tcp_messages_proto_rawDesc), len(file_tcp_messages_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tcp_messages_proto_goTypes,
		DependencyIndexes: file_tcp_messages_proto_depIdxs,
		MessageInfos:      file_tcp_messages_proto_msgTypes,
	}.Build()
	File_tcp_messages_proto = out.File
	file_tcp_messages_proto_goTypes = nil
	file_tcp_messages_proto_depIdxs = nil
}
